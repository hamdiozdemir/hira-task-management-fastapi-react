// This file is auto-generated by @hey-api/openapi-ts

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
  role: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
  role: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
  role: string
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
  role?: string
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
  role?: string
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean




// FILES

export type File = {
  id: number
  name: string
  path: string
  type: string
  created_at: string
  updated_at: string
}



// TASKS

// Task Statuses

export type BaseTaskStatus = {
  name: string
  color: string
  order: number
}

export type TaskStatus = BaseTaskStatus & {
  id: number
}

export type TaskStatusReadData = {
  id: number
}


export type TaskStatusDelete = {
  id: number
}

export type TaskStatusCreateData = {
  requestBody: BaseTaskStatus
}

export type TaskStatusUpdateData = {
  requestBody: BaseTaskStatus
  id: number
}

export type TaskStatusDetailResponse = TaskStatus

export type TaskStatusDeleteData = {
  id: number
}

export type TaskStatusReadResponse = TaskStatus[]


export type TaskStatusCreateResponse = TaskStatus


export type TaskStatusUpdateResponse = TaskStatus


export type TaskStatusDeleteResponse = Message



export type TaskCategory = {
  id: number
  name: string
  color: string
  icon: string
}

export type TaskType = {
  id: number
  name: string
  color: string
}


export type TaskPriority = {
  id: number
  name: string
  color: string
  icon: string
}


export type BaseTask = {
  id: number
  code: string
  created_by: UserPublic
  assigned_to: UserPublic | null
  assigned_by: UserPublic
  qa_user: UserPublic
  created_at: string
  updated_at: string
  title: string
  description: string
  status: TaskStatus
  category: TaskCategory
  type: TaskType
  priority: TaskPriority
  is_archived: boolean

  // extra fields
  toplist_site?: string | null
  country?: string | null
  toplist_type?: string | null

  // files
  files?: File[] | null
  watchers?: UserPublic[] | null
}


export type TaskComment = {
  id: number
  task: number
  created_by: UserPublic
  created_at: string
  updated_at: string
  content: string
  files?: File[] | null
}


export type TaskActionLog = {
  id: number
  action: string
  created_at: string
}

